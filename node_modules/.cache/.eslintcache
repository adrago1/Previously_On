[{"/home/gothelus/Previously_On/src/index.js":"1","/home/gothelus/Previously_On/src/App.js":"2","/home/gothelus/Previously_On/src/services/auth-service.js":"3","/home/gothelus/Previously_On/src/components/base/navbar.js":"4","/home/gothelus/Previously_On/src/components/Login/login.js":"5","/home/gothelus/Previously_On/src/components/userData/userSeries.js":"6","/home/gothelus/Previously_On/src/components/showList/showList.js":"7","/home/gothelus/Previously_On/src/components/episodeDetail/episodeDetail.js":"8","/home/gothelus/Previously_On/src/components/showDetail/showDetail.js":"9","/home/gothelus/Previously_On/src/components/friends/friends.js":"10","/home/gothelus/Previously_On/src/components/notFound/404.js":"11","/home/gothelus/Previously_On/src/components/base/pagination.js":"12","/home/gothelus/Previously_On/src/services/usePagination.js":"13"},{"size":196,"mtime":1654100617024,"results":"14","hashOfConfig":"15"},{"size":2099,"mtime":1654100617004,"results":"16","hashOfConfig":"15"},{"size":699,"mtime":1654100617024,"results":"17","hashOfConfig":"15"},{"size":10821,"mtime":1656343822583,"results":"18","hashOfConfig":"15"},{"size":4232,"mtime":1656343873559,"results":"19","hashOfConfig":"15"},{"size":1567,"mtime":1654100617008,"results":"20","hashOfConfig":"15"},{"size":3653,"mtime":1656343951107,"results":"21","hashOfConfig":"15"},{"size":6575,"mtime":1654100617008,"results":"22","hashOfConfig":"15"},{"size":8680,"mtime":1654100617008,"results":"23","hashOfConfig":"15"},{"size":5764,"mtime":1654100617008,"results":"24","hashOfConfig":"15"},{"size":470,"mtime":1654100617008,"results":"25","hashOfConfig":"15"},{"size":1982,"mtime":1654100617008,"results":"26","hashOfConfig":"15"},{"size":2380,"mtime":1654100617024,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1njg2nf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/gothelus/Previously_On/src/index.js",[],"/home/gothelus/Previously_On/src/App.js",["61","62","63"],"import { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./style/tailwind.css\";\nimport \"./style/style.css\";\nimport AuthService from \"./services/auth-service\";\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport Login from './components/Login/login';\nimport Navbar from './components/base/navbar';\nimport UserSeries from \"./components/userData/userSeries\";\nimport ShowList from \"./components/showList/showList\";\nimport ShowDetail from \"./components/showDetail/showDetail\";\nimport EpisodeDetail from \"./components/episodeDetail/episodeDetail\";\nimport Friends from \"./components/friends/friends\";\nimport NotFound from \"./components/notFound/404\";\n\n\nclass App extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: undefined,\n        }\n    };\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser: user,\n            });\n        }\n    }\n\n    render() {\n        const { currentUser } = this.state;\n\n        return (\n            <Router>\n                <Navbar />\n                <Switch>\n                    <Route exact path=\"/\"><Redirect to=\"/home\" /></Route>\n                    {currentUser === undefined && \n                    <Route exact path=\"/home\" component={Login} />\n                    }\n                    {currentUser !== undefined &&\n                    <Switch>\n                        <Route exact path=\"/home\" component={UserSeries} />\n                        <Route exact path=\"/series\" component={ShowList} />\n                        <Route exact path=\"/serie/details\" component={ShowDetail} />\n                        <Route exact path=\"/episode/details\" component={EpisodeDetail} />\n                        <Route exact path=\"/friends\" component={Friends} />\n                        <Route component={NotFound} />\n                    </Switch>\n                    }\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;","/home/gothelus/Previously_On/src/services/auth-service.js",[],"/home/gothelus/Previously_On/src/components/base/navbar.js",["64"],"/* This example requires Tailwind CSS v2.0+ */\nimport React, { useState, Fragment, useEffect } from 'react';\nimport { Disclosure, Menu, Transition } from '@headlessui/react';\nimport { MenuIcon, XIcon } from '@heroicons/react/outline';\nimport AuthService from '../../services/auth-service';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst navigation = [\n  { name: 'Accueil', href: '/home', current: false },\n  { name: 'Séries', href: '/series', current: false },\n  { name: 'Amis', href: '/friends', current: false },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Navbar() {\n\n    const [avatar, setAvatar] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [logged, setLogged] = useState(false);\n    const [logoSource, setLogoSource] = useState(\"\");\n\n    useEffect(() => {\n        const user = AuthService.getCurrentUser();\n        //console.log(user.user.id);\n        //console.log(currentUser);\n        if (user !== null) {\n            axios.get(\"https://api.betaseries.com/members/infos\", {\n                params: {\n                    id: user.user.id,\n                    client_id: \"22f661bdce5c\",\n                }\n            }).then(response => {\n                setAvatar(response.data.member.avatar)\n                setUsername(response.data.member.login)\n                setLogoSource(\"./assets/CameraShutterBlack.svg\")\n                setLogged(true);\n            })\n            //setAvatar(response.data.member.avatar)       \n        } else {\n            setAvatar(\"./assets/utilisateur.svg\");\n            setUsername(\"Invité\");\n        }\n    }, []);\n\n    if (logged) {\n    return (\n    <Disclosure as=\"nav\" className=\"bg-gradient-to-r from-transparent to-gray-400\">\n        {({ open }) => (\n        <>\n            <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n                <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                    <span className=\"sr-only\">Open main menu</span>\n                    {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                    ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                    )}\n                </Disclosure.Button>\n                </div>\n                <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                    <img\n                    className=\"block lg:hidden h-8 w-auto\"\n                    src={logoSource}\n                    alt=\"logo\"\n                    />\n                    <img\n                    className=\"hidden lg:block h-8 w-auto\"\n                    src={logoSource}\n                    alt=\"logo\"\n                    />\n                    <h1 className=\"text-white font-bold px-4\">Previously On</h1>\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                    <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (/*\n                        <a\n                        key={item.name}\n                        href={item.href}\n                        className={classNames(\n                            item.current ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                            'px-3 py-2 rounded-md text-sm font-medium'\n                        )}\n                        aria-current={item.current ? 'page' : undefined}\n                        >\n                        {item.name}\n                        </a>*/\n                        <Link to={item.href}\n                        key={item.name}\n                        className={classNames(\n                            item.current ? 'bg-gray-700 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                            'px-3 py-2 rounded-md text-sm font-medium'\n                        )}\n                        aria-current={item.current ? 'page' : undefined}\n                        >{item.name}</Link>\n                    ))}\n                    </div>\n                </div>\n                </div>\n                <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <p className=\"hidden sm:block bg-transparent p-1 text-white\">{username}</p>\n\n                {/* Profile dropdown */}\n                <Menu as=\"div\" className=\"ml-3 relative\">\n                    <div>\n                    <Menu.Button className=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                        <span className=\"sr-only\">Open user menu</span>\n                        <img\n                        className=\"h-8 w-8 rounded-full\"\n                        src={avatar}\n                        alt=\"avatar\"\n                        />\n                    </Menu.Button>\n                    </div>\n                    <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                    >\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                        <Menu.Item>\n                        {({ active }) => (\n                            <a\n                            href=\"#\"\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\n                            onClick={AuthService.logout}\n                            >\n                            Se déconnecter\n                            </a>\n                        )}\n                        </Menu.Item>\n                    </Menu.Items>\n                    </Transition>\n                </Menu>\n                </div>\n            </div>\n            </div>\n\n            <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                {navigation.map((item) => (/*\n                <a\n                    key={item.name}\n                    href={item.href}\n                    className={classNames(\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                    'block px-3 py-2 rounded-md text-base font-medium'\n                    )}\n                    aria-current={item.current ? 'page' : undefined}\n                >\n                    {item.name}\n                </a>*/\n                <Link \n                to={item.href}\n                key={item.name}\n                className={classNames(\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                    'block px-3 py-2 rounded-md text-base font-medium'\n                    )}\n                aria-current={item.current ? 'page' : undefined}>\n                {item.name}\n                </Link>\n                ))}\n            </div>\n            </Disclosure.Panel>\n        </>\n        )}\n    </Disclosure>\n    )\n    } else {\n        return (\n            <Disclosure as=\"nav\" className=\"bg-gradient-to-r from-transparent to-gray-400\">\n                {({ open }) => (\n                <>\n                    <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n                    <div className=\"relative flex items-center justify-between h-16\">\n                        <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                        {/* Mobile menu button*/}\n                        </div>\n                        <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                        <div className=\"flex-shrink-0 flex items-center\">\n                            <img\n                            className=\"block lg:hidden h-8 w-auto\"\n                            src=\"./assets/CameraShutterBlack.svg\"\n                            alt=\"Previously On\"\n                            />\n                            <img\n                            className=\"hidden lg:block h-8 w-auto\"\n                            src=\"./assets/CameraShutterBlack.svg\"\n                            alt=\"Previously On\"\n                            />\n                            <h1 className=\"text-white font-bold px-4\">Previously On</h1>\n                        </div>\n                        <div className=\"hidden sm:block sm:ml-6\">\n                            <div className=\"flex space-x-4\">\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                        <p className=\"hidden sm:block bg-transparent p-1 text-white\">{username}</p>\n        \n                        {/* Profile dropdown */}\n                        <Menu as=\"div\" className=\"ml-3 relative\">\n                            <div>\n                            <Menu.Button className=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\n                                <span className=\"sr-only\">Open user menu</span>\n                                <img\n                                className=\"h-8 w-8 rounded-full\"\n                                src={avatar}\n                                alt=\"Avatar\"\n                                />\n                            </Menu.Button>\n                            </div>\n                        </Menu>\n                        </div>\n                    </div>\n                    </div>\n        \n                    <Disclosure.Panel className=\"sm:hidden\">\n                    <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                    </div>\n                    </Disclosure.Panel>\n                </>\n                )}\n            </Disclosure>\n        )  \n    }\n    \n}\n","/home/gothelus/Previously_On/src/components/Login/login.js",["65"],"import React, { useState } from \"react\";\nimport Typing from \"react-typing-animation\";\nimport Fade from 'react-reveal/Fade';\nimport axios from \"axios\";\nimport AuthService from \"../../services/auth-service\";\nimport CryptoJS from \"crypto-js\";\n\nexport default function Login() {\n\n    let messageErreur;\n    const [finishedTyping, setFinishedTyping] = useState(false);\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [apiError, setApiError] = useState(\"\");\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let hashedPassword = CryptoJS.MD5(password).toString();\n        AuthService.login(username, hashedPassword, \"22f661bdce5c\")\n        .then (function (res) {\n            window.location = \"/home\";\n        })\n        .catch(function (error) {\n            //console.log(error.response.data.errors[0].text);\n            setApiError(error.response.data.errors[0].text);\n        })\n\n        console.log(apiError);\n    }\n\n    if (apiError === \"\") {\n        messageErreur = \"\";\n    } else {\n        messageErreur = <p className=\"text-red-500 text-xs italic\">{apiError}</p>\n    }\n\n    return (\n        <div className=\"container mx-auto text-center px-30 text-white sm:-mt-16\">\n            <div className=\"flex flex-col sm:flex-row items-center justify-around h-screen\">\n                <div className=\"pr-0 sm:pr-24 xl:pr-48 flex-shrink-0 relative\">\n                    <Typing className=\"text-6xl font-cabin\" speed={45} onFinishedTyping={() => setFinishedTyping(true)}>\n                        <p>CONNECTE-TOI</p>\n                        <p className=\"mt-7\">AVEC TON COMPTE</p>\n                        <h6 className=\"mt-7\">BETASERIES<span className=\"text-yellow-400\">.</span></h6>\n                    </Typing>\n                    {finishedTyping && \n                    <Fade left>\n                        <img className=\"hidden lg:block absolute inset-y-20 right-0 w-16 h-16\" alt=\"right-arrow\" src=\"./assets/right-arrow.svg\" />\n                    </Fade>\n                    }\n                </div>\n                <div className=\"sm:mt-0 -mt-36 flex font-roboto\">\n                    <div className=\"w-full max-w-xs\">\n                        <form onSubmit={handleSubmit} className=\"bg-white bg-opacity-95 shadow-2xl rounded px-8 pt-6 pb-8 mb-4\">\n                            <div className=\"mb-4\">\n                                <label className=\"block text-left text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n                                    Pseudonyme\n                                </label>\n                                <input onChange={e => setUsername(e.target.value)}className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" type=\"text\" placeholder=\"Pseudonyme ou e-mail\" />\n                            </div>\n                            <div className=\"mb-6\">\n                                <label className=\"block text-left text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n                                    Mot de passe\n                                </label>\n                                <input onChange={e => setPassword(e.target.value)} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" id=\"password\" type=\"password\" placeholder=\"******************\" />\n                            </div>\n                            <div className=\"flex items-center justify-between mb-6\">\n                                <input type=\"submit\" value=\"Valider\" className=\"cursor-pointer bg-yellow-300 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" />\n                                <a className=\"inline-block align-baseline font-bold text-sm text-yellow-300 hover:text-yellow-500\" href=\"/series\">\n                                    Inscription\n                                </a>\n                            </div>\n                            {messageErreur}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","/home/gothelus/Previously_On/src/components/userData/userSeries.js",[],"/home/gothelus/Previously_On/src/components/showList/showList.js",["66","67"],"import React, { useEffect, useMemo, useState } from \"react\";\nimport axios from \"axios\";\nimport Pagination from '../base/pagination';\nimport { Link } from \"react-router-dom\";\n\nlet PageSize = 12;\n\nexport default function ShowList() {\n\n    const [loading, setLoading] = useState(true);\n\n    const [showListing, setShowListing] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [searchByName, setSearchByName] = useState(\"\");\n\n    useEffect(() => {\n\n        let mounted = true;\n        axios.get(\"https://api.betaseries.com/shows/list\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                order: \"popularity\",\n                limit: \"200\",\n            }\n        }).then(res => {\n            if (mounted) {\n                setShowListing(res.data.shows);\n                setCurrentPage(1);\n                setLoading(false);\n            }\n        }).catch(error => {\n            console.log(error.response);\n        })\n\n        return function cleanup() {\n            mounted = false;\n        }\n        \n    }, []);\n\n\n    const currentShowArray = useMemo(() => {\n        const firstPageIndex = (currentPage - 1) * PageSize;\n        const lastPageIndex = firstPageIndex + PageSize;\n        return showListing.slice(firstPageIndex, lastPageIndex);\n    }, [currentPage]);\n    \n    return (\n        <div className=\"container mx-auto text-white mt-7 mb-10\">\n            {loading ? <p className=\"text-center mx-auto text-2xl font-cabin mt-28 uppercase font-bold\">Chargement des séries...</p> : \n            <div className=\"grid grid-cols-3\">\n                <div className=\"col-span-1\">\n                    <label className=\"block mb-2 font-cabin text-2xl\" htmlFor=\"name\">Rechercher une série</label>\n                    <input type=\"text\" className=\"text-black\" name=\"name\" onChange={(e) => {setSearchByName(e.target.value)}} />\n                </div>\n                <div className=\"grid gap-x-8 gap-y-8 gap col-span-2 grid-cols-2\">\n                    {currentShowArray.map(function(data) {\n                        return(\n                            <div className=\"font-roboto rounded-r-lg bg-gray-500 bg-opacity-30\">\n                                <Link to={{pathname: '/serie/details', state: data.id}}><img src={data.images.poster} alt=\"affiche de la série\" href=\"Affiche de série\" className=\"float-left w-2/5 mr-2\"/></Link>\n                                <div className=\"infos-thumb-show my-1\">\n                                    <Link to={{pathname: '/serie/details', state: data.id}} className=\"text-xl text-yellow-400 font-bold filter contrast-150\">{data.title}</Link>\n                                    <div className=\"mt-5\">\n                                        <p>Saisons : {data.seasons}</p>\n                                        <p>Episodes : {data.episodes}</p>\n                                        <p className=\"text-gray-300\">{data.creation}</p>\n                                        <p className=\"mt-4 font-cabin text-sm description-shrink text-left\">{data.description}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    })}\n                    <Pagination\n                        className=\"pagination-bar col-span-2 mx-auto\"\n                        currentPage={currentPage}\n                        totalCount={showListing.length}\n                        pageSize={PageSize}\n                        onPageChange={page => setCurrentPage(page)}\n                    />\n                </div>\n            </div>\n            }\n        </div>\n    );\n}","/home/gothelus/Previously_On/src/components/episodeDetail/episodeDetail.js",["68"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router\";\nimport Moment from \"moment\";\nimport AuthService from \"../../services/auth-service\";\nimport Utilisateur from \"../../images/utilisateur.svg\";\n\nexport default function EpisodeDetail() {\n\n    const [loading, setLoading] = useState(true);\n    const { state } = useLocation();\n    const user = AuthService.getCurrentUser();\n\n    const [episodeDetail, setEpisodeDetail] = useState([]);\n    const [commentaire, setCommentaire] = useState(\"\");\n    const [listeCommentaires, setListeCommentaires] = useState([]);\n\n    useEffect(() => {\n        let mounted = true;\n        axios.get(\"https://api.betaseries.com/episodes/display\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                id: state,\n                token: user.token,\n            }\n        }).then(res => {\n            if (mounted) {\n                setEpisodeDetail(res.data.episode);\n                console.log(res.data.episode);\n                setLoading(false);\n            }\n        }).catch(error => {\n            console.log(error.response);\n        })\n\n        return function cleanup() {\n            mounted = false;\n        }\n    }, []);\n\n    const handleCommentSubmit = (e) => {\n        e.preventDefault();\n        \n        axios.post(\"https://api.betaseries.com/comments/comment\", {\n            client_id: \"22f661bdce5c\",\n            type: \"episode\",\n            id: state,\n            token: user.token,\n            text: commentaire\n        }).then(res => {\n            alert(\"Commentaire envoyé !\");\n        }).catch(res => {\n            alert(\"Erreur, réessayez plus tard.\");\n        })\n    }\n\n    const handleChange = (e) => {\n        setCommentaire(e.target.value);\n    }\n\n    const displayCommentaires = (e) => {\n        e.preventDefault();\n        axios.get(\"https://api.betaseries.com/comments/comments\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                type: \"episode\",\n                id: state,\n                replies: \"0\",\n                order: \"desc\"\n            }\n        }).then(res => {\n            setListeCommentaires(res.data.comments);\n            console.log(res.data.comments)\n        }).catch(error => {\n            console.log(error.response);\n        })\n    }\n\n    return (\n        <div className=\"container mx-auto mt-28 text-white\">\n            {loading ? <p className=\"text-center mx-auto text-2xl font-cabin mt-28 uppercase font-bold\">Chargement des informations...</p> :\n            <div className=\"grid grid-cols-5 gap-20 text-xl\">\n                <div className=\"col-span-1 text-right\">\n                    <div className=\"mt-7\">\n                        <p>Nom de la série</p>\n                        <p className=\"text-base text-gray-400\">{episodeDetail.show.title}</p>\n                    </div>\n                    <div className=\"mt-7\">\n                        <p>Numéro de l'épisode</p>\n                        <p className=\"text-base text-gray-400\">{episodeDetail.episode}</p>\n                    </div>\n                    <div className=\"mt-7\">\n                        <p>Saison</p>\n                        <p className=\"text-base text-gray-400\">{episodeDetail.season}</p>\n                    </div>\n                    <div className=\"mt-7\">\n                        <p>Diffusion</p>\n                        <p className=\"text-base text-gray-400\">{Moment(episodeDetail.date).format(\"DD/MM/YYYY\")}</p>\n                    </div>\n                    <div className=\"mt-7\">\n                        <p>Note</p>\n                        <p className=\"text-base text-gray-400\">{Math.round(episodeDetail.note.mean)}/5</p>\n                    </div>\n                    <div className=\"mt-7\">\n                        <p>Vu</p>\n                        <p className=\"text-base text-gray-400\">{episodeDetail.user.seen ? \"Oui\" : \"Non\"}</p>\n                    </div>\n                </div>\n                <div className=\"col-span-2\">\n                    <h2 className=\"text-right -mt-12 text-yellow-400 font-roboto text-2xl uppercase font-bold\"><span className=\"p-2 bg-gray-700 rounded-xl filter contrast-150 bg-opacity-80\">{episodeDetail.title}</span></h2>\n                    <p className=\"mt-11 mb-28\">Résumé de l'épisode : <br /><br />\n                        {episodeDetail.description}\n                    </p>\n                    <form onSubmit={handleCommentSubmit}>\n                        <label htmlFor=\"comment\" className=\"text-xl text-gray-200 font-cabin\">Ecris un commentaire sur l'épisode !</label>\n                        <textarea className=\"text-black\" onChange={handleChange} name=\"comment\" rows=\"5\" cols=\"40\"></textarea>\n                        <input type=\"submit\" className=\"cursor-pointer shadow bg-yellow-300 hover:bg-yellow-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\" value=\"Envoyer\" />\n                    </form>\n                </div>\n                <div className=\"col-span-2\">\n                <img className=\"-mt-10 w-10/12 float-right\" src={'https://api.betaseries.com/pictures/episodes?id=' + state + '&client_id=22f661bdce5c'} alt=\"Affiche episode\" />\n                </div>\n            </div>\n            }\n            {loading ? <p></p> :\n            <div className=\"container mx-auto mt-36 mb-9\">\n                <h2 onClick={displayCommentaires} className=\"cursor-pointer text-center -mt-12 text-yellow-400 font-roboto text-2xl uppercase font-bold\"><span className=\"p-2 bg-gray-700 rounded-xl filter contrast-150 bg-opacity-80\">Commentaires de l'épisode &#9660;</span></h2>\n                {listeCommentaires.map(function(data) {\n                return (\n                    <div className=\"w-7/12 mt-10 mb-10 mx-auto bg-gray-400 bg-opacity-50 p-4\">\n                        <div className=\"flex items-center\">\n                            <img src={data.avatar === null ? Utilisateur : data.avatar} alt=\"avatar\" className=\"w-1/12 rounded-full\" />\n                            <div className=\"flex flex-col -mt-5\">\n                                <p className=\"ml-5\">{data.login}</p>\n                                <p className=\"ml-5 text-sm text-gray-300\">{Moment(data.date).format(\"DD-MM-YYYY h:mm:ss\")}</p>\n                            </div>\n                        </div>\n                        <div className=\"ml-24\">\n                            <p>{data.text}</p>\n                        </div>\n                    </div>\n                )})}\n            </div>\n            }\n        </div>\n    );\n}","/home/gothelus/Previously_On/src/components/showDetail/showDetail.js",["69","70"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthService from \"../../services/auth-service\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ShowDetail() {\n\n    const [loading, setLoading] = useState(true);\n    const user = AuthService.getCurrentUser();\n\n    const { state } = useLocation();\n\n    const [showDetails, setShowDetails] = useState([]);\n    const [addShowMsg, setAddShowMsg] = useState(\"\");\n    const [episodes, setEpisodes] = useState([]);\n    const [marked, setMarked] = useState(false);\n    \n\n    useEffect(() => {\n        \n        let mounted = true;\n        axios.get(\"https://api.betaseries.com/shows/display\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                id: state\n            }\n        }).then(res => {\n            if (mounted) {\n                setShowDetails(res.data.show);\n                setLoading(false);\n            }\n        }).catch(error => {\n            console.log(error.response);\n        })\n\n        return function cleanup() {\n            mounted = false;\n        }\n\n    }, [])\n\n    const addShowToUser = (e) => {\n        e.preventDefault();\n        axios.post(\"https://api.betaseries.com/shows/show\", {\n            client_id: \"22f661bdce5c\",\n            token: user.token,\n            id: state\n        }).then(res => {\n            setAddShowMsg(\"Ajouté à votre liste !\");\n        }).catch(error => {\n            setAddShowMsg(\"Vous suivez déjà cette serie...\");\n            console.log(error.response);\n        })\n    }\n\n    const removeShowToUser = (e) => {\n        e.preventDefault();\n        axios.delete(\"https://api.betaseries.com/shows/show\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                token: user.token,\n                id: state\n            }\n        }).then(res => {\n            setAddShowMsg(\"Série retirée de votre liste !\");\n        }).catch(error => {\n            setAddShowMsg(\"Vous ne suivez pas serie...\");\n            console.log(error.response);\n        })\n    }\n\n    const displayEpisodes = (e) => {\n        e.preventDefault();\n        /*\n        axios.get(\"https://api.betaseries.com/episodes/list\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                token: user.token,\n                userId: user.user.id,\n                showId: state\n            }\n        }).then(res => {\n            setEpisodes(res.data.shows[0].unseen);\n            console.log(res.data.shows[0].unseen);\n        }).catch(error => {\n            console.log(error.response);\n        })\n        */\n        axios.get(\"https://api.betaseries.com/shows/episodes\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                id: state,\n                token: user.token\n            }\n        }).then(res => {\n            //console.log(res.data.episodes);\n            setEpisodes(res.data.episodes);\n            if (res.data.episodes.user.seen) {\n                setMarked(false);\n            } else {\n                setMarked(true);\n            }\n        }).catch(error => {\n            console.log(error.response);\n        })\n    }\n\n    const markAsSeen = (idEpisode) => {\n        axios.post(\"https://api.betaseries.com/episodes/watched\", {\n            bulk: true,\n            client_id: \"22f661bdce5c\",\n            token: user.token,\n            delete: true,\n            id: idEpisode\n        }).then(res => {\n        }).catch(error => {\n            console.log(error.response);\n        })\n    }\n\n    const markAsUnseen = (idEpisode) => {\n        axios.delete(\"https://api.betaseries.com/episodes/watched\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                token: user.token,\n                id: idEpisode\n            }\n        }).then(res => {\n\n        }).catch(error => {\n            console.log(error.response);\n        })\n    }\n\n\n    return(\n        <>\n        <div className=\"container mx-auto mt-28 text-white\">\n            {loading ? <p className=\"text-center mx-auto text-2xl font-cabin mt-28 uppercase font-bold\">Chargement des informations...</p> :\n            <div className=\"grid grid-cols-5 gap-20 text-xl\">\n                <div className=\"col-span-1 text-right\">\n                    <div className=\"mb-7\">\n                        <p>Genre</p>\n                        <p className=\"text-base text-gray-400\">{Object.values(showDetails.genres).join(\", \")}</p>\n                    </div>\n                    <div className=\"mb-7\">\n                        <p>Saisons</p>\n                        <p className=\"text-base text-gray-400\">{showDetails.seasons}</p>\n                    </div>\n                    <div className=\"mb-7\">\n                        <p>Episodes</p>\n                        <p className=\"text-base text-gray-400\">{showDetails.episodes}</p>\n                    </div>\n                    <div className=\"mb-7\">\n                        <p>Durée des épisodes</p>\n                        <p className=\"text-base text-gray-400\">{showDetails.length} min</p>\n                    </div>\n                    <div className=\"mb-7\">\n                        <p>Note</p>\n                        <p className=\"text-base text-gray-400\">{Math.round(showDetails.notes.mean)}/5</p>\n                    </div>\n                    <div className=\"mb-7\">\n                        <p>Archiver / Retirer la série</p>\n                        <button onClick={addShowToUser} className=\"text-base text-gray-400 text-4xl mt-3\"><span className=\"border px-3 pb-1\">+</span></button>\n                        <button onClick={removeShowToUser} className=\"text-base text-gray-400 text-4xl ml-6 mt-3\"><span className=\"border px-4 pb-1\">-</span></button>\n                        <p className=\"text-red-400 italic text-sm mt-3\">{addShowMsg}</p>\n                    </div>\n                </div>\n                <div className=\"col-span-2\">\n                    <h2 className=\"text-right -mt-12 text-yellow-400 font-roboto text-2xl uppercase font-bold\"><span className=\"p-2 bg-gray-700 rounded-xl filter contrast-150 bg-opacity-80\">{showDetails.title}</span></h2>\n                    <p className=\"mt-4\">Résumé : <br /><br /> \n                    {showDetails.description}\n                    </p>\n                </div>\n                <div className=\"col-span-2\">\n                    <img className=\"-mt-10 w-10/12 float-right\" src={showDetails.images.poster} alt=\"Affiche\" />\n                </div>\n            </div>\n            }\n        {loading ? <p></p> :\n            <div className=\"container mx-auto mt-36 mb-9\">\n                <h2 onClick={displayEpisodes} className=\"cursor-pointer text-center -mt-12 text-yellow-400 font-roboto text-2xl uppercase font-bold\"><span className=\"p-2 bg-gray-700 rounded-xl filter contrast-150 bg-opacity-80\">Episodes &#9660;</span></h2>\n                <div className=\"grid grid-cols-7 gap-12 mt-12\">\n                    {episodes.map(function(data) {\n                        return (\n                            <div className=\"col-span-1\">\n                                {data.user.seen &&\n                                <>\n                                    <Link to={{pathname: '/episode/details', state: data.id}}><img className=\"cursor-pointer\" src={'https://api.betaseries.com/pictures/episodes?id=' + data.id + '&client_id=22f661bdce5c'} alt=\"Affiche episode\" /></Link>\n                                    <p className=\"text-center font-roboto mt-2\">{data.code}</p>\n                                    <p onClick={(e) => {markAsUnseen(data.id);displayEpisodes(e)}} className=\"text-red-300 cursor-pointer underline text-sm text-center -mt-1\">marquer comme non-vu</p>\n                                </>\n                                }\n                                {!data.user.seen &&\n                                <>\n                                    <Link to={{pathname: '/episode/details', state: data.id}}><img className=\"cursor-pointer filter blur\" src={'https://api.betaseries.com/pictures/episodes?id=' + data.id + '&client_id=22f661bdce5c'} alt=\"Affiche episode\" /></Link>\n                                    <p className=\"text-center font-roboto mt-2\">{data.code}</p>\n                                    <p onClick={(e) => {markAsSeen(data.id);displayEpisodes(e)}} className=\"text-gray-400 cursor-pointer underline text-sm text-center -mt-1\">marquer comme vu</p>\n                                </>\n                                }\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        }\n        </div>\n        </>\n    )\n}","/home/gothelus/Previously_On/src/components/friends/friends.js",["71","72","73"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AuthService from \"../../services/auth-service\";\n\nexport default function Friends() {\n\n    const [loading, setLoading] = useState(true);\n    const user = AuthService.getCurrentUser();\n    const [friendList, setFriendList] = useState([]);\n    const [friendInput, setFriendInput] = useState(\"\");\n    const [friendRequest, setFriendRequest] = useState([]);\n    const [blocked, setBlocked] = useState(false);\n\n\n    useEffect(() => {\n        let mounted = true;\n        axios.get(\"https://api.betaseries.com/friends/list\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                id: user.user.id,\n                token: user.token\n            }\n        }).then(res => {\n            if (mounted) {\n                setFriendList(res.data.users);\n                console.log(res.data.users);\n                setLoading(false);\n            }\n        }).catch(error => {\n            console.log(error.response);\n        })\n\n        axios.get(\"https://api.betaseries.com/friends/requests\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                token: user.token,\n            }\n        }).then(res => {\n            if (mounted) {\n                setFriendRequest(res.data.users);\n                console.log(res.data.users);\n                setLoading(false);\n            }\n        }).catch(error => {\n            console.log(error.response);\n        })\n\n        return function cleanup() {\n            mounted = false;\n        }\n    }, [])\n\n\n    const handleChange = (e) => {\n        setFriendInput(e.target.value);\n        console.log(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        axios.get(\"https://api.betaseries.com/friends/find\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                type: \"emails\",\n                token: user.token,\n                emails: friendInput\n            }\n        }).then(res => {\n            return axios.post(\"https://api.betaseries.com/friends/friend\", {\n                token: user.token,\n                client_id: \"22f661bdce5c\",\n                id: res.data.users[0].id\n            }).then(response => {\n                alert(\"Ami ajouté !\")\n            }).catch(error => {\n                console.log(res.data.users.id);\n                console.log(error.response);\n            })\n        }).catch(err => {\n            console.log(err.response);\n        })\n    }\n\n    const handleBlock = (idUser) => {\n\n        axios.post(\"https://api.betaseries.com/friends/block\", {\n            client_id: \"22f661bdce5c\",\n            token: user.token,\n            id: idUser\n        }).then(res => {\n            alert(\"Utilisateur bloqué\");\n            setBlocked(true);\n        }).catch(error => {\n            console.log(error.response);\n        })\n    }\n\n    const handleUnblock = (idUser) => {\n        axios.delete(\"https://api.betaseries.com/friends/block\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                token: user.token,\n                id: idUser\n            }\n        }).then(res => {\n            alert(\"Utilisateur débloqué\");\n            setBlocked(false);\n        }).catch(error => {\n            console.log(error.response);\n        })\n    }\n\n    const handleDelete = (idUser) => {\n        axios.delete(\"https://api.betaseries.com/friends/friend\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                token: user.token,\n                id: idUser\n            }\n        }).then(res => {\n            alert(\"Utilisateur supprimé\");\n            setBlocked(true);\n        }).catch(error => {\n            console.log(error.response);\n        }) \n    }\n\n    return (\n        <div className=\"container mx-auto mt-24 border w-3/4 text-white text-xl\">\n            {loading ? <p className=\"text-center mx-auto text-2xl font-cabin mt-28 uppercase font-bold\">Chargement des informations...</p> :\n            <div className=\"grid grid-cols-6 gap-16\">\n                <div className=\"col-span-2\">\n                    <p className=\"mb-10 text-center\">AMIS</p>\n                    {friendList.map(function(data) {\n                    return(\n                        <div className=\"flex items-center flex-row\">\n                            {blocked &&\n                            <p className=\"mr-16 line-through\">{data.login}</p> \n                            }\n                            {!blocked &&\n                            <p className=\"mr-16\">{data.login}</p>\n                            }\n                            <button onClick={(e) => handleBlock(data.id)} className=\"border p-1 text-right mr-3\">BLOCK</button>\n                            <button onClick={(e) => handleDelete(data.id)} className=\"border p-1 text-right\">SUPPR</button>\n                        </div>\n                    )  \n                    })}\n                </div>\n                <div className=\"col-span-2\">\n                    <p className=\"mb-8 text-center\">ENVOYER UNE DEMANDE</p>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"email\">Email :</label>\n                        <input name=\"email\" className=\"text-black w-full\" type=\"text\" onChange={handleChange} />\n                        <input className=\"mt-5 cursor-pointer shadow bg-yellow-300 hover:bg-yellow-400 focus:shadow-outline focus:outline-none text-white font-bold py-2 px-4 rounded\" type=\"submit\" value=\"Envoyer\" />\n                    </form>\n                </div>\n                <div className=\"col-span-2\">\n                    <p className=\"mb-10 text-center\">DEMANDES D'AMI</p>\n                </div>\n            </div>\n            }\n        </div>\n    )\n}","/home/gothelus/Previously_On/src/components/notFound/404.js",[],"/home/gothelus/Previously_On/src/components/base/pagination.js",[],"/home/gothelus/Previously_On/src/services/usePagination.js",[],{"ruleId":"74","severity":1,"message":"75","line":5,"column":17,"nodeType":"76","messageId":"77","endLine":5,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":5,"column":27,"nodeType":"76","messageId":"77","endLine":5,"endColumn":36},{"ruleId":"74","severity":1,"message":"79","line":5,"column":38,"nodeType":"76","messageId":"77","endLine":5,"endColumn":46},{"ruleId":"80","severity":1,"message":"81","line":134,"column":29,"nodeType":"82","endLine":138,"endColumn":30},{"ruleId":"74","severity":1,"message":"83","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},{"ruleId":"74","severity":1,"message":"84","line":14,"column":12,"nodeType":"76","messageId":"77","endLine":14,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":46,"column":8,"nodeType":"87","endLine":46,"endColumn":21,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":39,"column":8,"nodeType":"87","endLine":39,"endColumn":10,"suggestions":"90"},{"ruleId":"74","severity":1,"message":"91","line":17,"column":12,"nodeType":"76","messageId":"77","endLine":17,"endColumn":18},{"ruleId":"85","severity":1,"message":"92","line":41,"column":8,"nodeType":"87","endLine":41,"endColumn":10,"suggestions":"93"},{"ruleId":"74","severity":1,"message":"94","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":25},{"ruleId":"85","severity":1,"message":"95","line":51,"column":8,"nodeType":"87","endLine":51,"endColumn":10,"suggestions":"96"},{"ruleId":"74","severity":1,"message":"97","line":98,"column":11,"nodeType":"76","messageId":"77","endLine":98,"endColumn":24},"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'searchByName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'showListing'. Either include it or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has missing dependencies: 'state' and 'user.token'. Either include them or remove the dependency array.",["99"],"'marked' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.",["100"],"'friendRequest' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user.token' and 'user.user.id'. Either include them or remove the dependency array.",["101"],"'handleUnblock' is assigned a value but never used.",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [currentPage, showListing]",{"range":"110","text":"111"},"Update the dependencies array to be: [state, user.token]",{"range":"112","text":"113"},"Update the dependencies array to be: [state]",{"range":"114","text":"115"},"Update the dependencies array to be: [user.token, user.user.id]",{"range":"116","text":"117"},[1310,1323],"[currentPage, showListing]",[1248,1250],"[state, user.token]",[1155,1157],"[state]",[1566,1568],"[user.token, user.user.id]"]