{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _default(pluginConfig, plugins) {\n  if (pluginConfig === undefined) {\n    return plugins;\n  }\n\n  const pluginNames = Array.isArray(pluginConfig) ? pluginConfig : [...new Set(plugins.filter(pluginName => {\n    return pluginConfig !== false && pluginConfig[pluginName] !== false;\n  }).concat(Object.keys(pluginConfig).filter(pluginName => {\n    return pluginConfig[pluginName] !== false;\n  })))];\n  return pluginNames;\n}","map":{"version":3,"sources":["/home/alan/delivery_2/previously_on/client/node_modules/tailwindcss/lib/util/configurePlugins.js"],"names":["Object","defineProperty","exports","value","default","_default","pluginConfig","plugins","undefined","pluginNames","Array","isArray","Set","filter","pluginName","concat","keys"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,SAASA,QAAT,CAAkBC,YAAlB,EAAgCC,OAAhC,EAAyC;AACvC,MAAID,YAAY,KAAKE,SAArB,EAAgC;AAC9B,WAAOD,OAAP;AACD;;AAED,QAAME,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAcL,YAAd,IAA8BA,YAA9B,GAA6C,CAAC,GAAG,IAAIM,GAAJ,CAAQL,OAAO,CAACM,MAAR,CAAeC,UAAU,IAAI;AACxG,WAAOR,YAAY,KAAK,KAAjB,IAA0BA,YAAY,CAACQ,UAAD,CAAZ,KAA6B,KAA9D;AACD,GAF4E,EAE1EC,MAF0E,CAEnEf,MAAM,CAACgB,IAAP,CAAYV,YAAZ,EAA0BO,MAA1B,CAAiCC,UAAU,IAAI;AACvD,WAAOR,YAAY,CAACQ,UAAD,CAAZ,KAA6B,KAApC;AACD,GAFS,CAFmE,CAAR,CAAJ,CAAjE;AAKA,SAAOL,WAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _default(pluginConfig, plugins) {\n  if (pluginConfig === undefined) {\n    return plugins;\n  }\n\n  const pluginNames = Array.isArray(pluginConfig) ? pluginConfig : [...new Set(plugins.filter(pluginName => {\n    return pluginConfig !== false && pluginConfig[pluginName] !== false;\n  }).concat(Object.keys(pluginConfig).filter(pluginName => {\n    return pluginConfig[pluginName] !== false;\n  })))];\n  return pluginNames;\n}"]},"metadata":{},"sourceType":"script"}