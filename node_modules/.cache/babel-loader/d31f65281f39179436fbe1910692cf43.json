{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConfig;\n\nvar _some = _interopRequireDefault(require(\"lodash/some\"));\n\nvar _mergeWith = _interopRequireDefault(require(\"lodash/mergeWith\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isUndefined = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _defaults = _interopRequireDefault(require(\"lodash/defaults\"));\n\nvar _map = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _uniq = _interopRequireDefault(require(\"lodash/uniq\"));\n\nvar _toPath = _interopRequireDefault(require(\"lodash/toPath\"));\n\nvar _head = _interopRequireDefault(require(\"lodash/head\"));\n\nvar _isPlainObject = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\nvar _negateValue = _interopRequireDefault(require(\"./negateValue\"));\n\nvar _corePluginList = _interopRequireDefault(require(\"../corePluginList\"));\n\nvar _configurePlugins = _interopRequireDefault(require(\"./configurePlugins\"));\n\nvar _defaultConfig = _interopRequireDefault(require(\"../../stubs/defaultConfig.stub\"));\n\nvar _colors = _interopRequireDefault(require(\"../../colors\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst configUtils = {\n  colors: _colors.default,\n\n  negative(scale) {\n    return Object.keys(scale).filter(key => scale[key] !== '0').reduce((negativeScale, key) => ({ ...negativeScale,\n      [`-${key}`]: (0, _negateValue.default)(scale[key])\n    }), {});\n  },\n\n  breakpoints(screens) {\n    return Object.keys(screens).filter(key => typeof screens[key] === 'string').reduce((breakpoints, key) => ({ ...breakpoints,\n      [`screen-${key}`]: screens[key]\n    }), {});\n  }\n\n};\n\nfunction value(valueToResolve, ...args) {\n  return (0, _isFunction.default)(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\n\nfunction collectExtends(items) {\n  return items.reduce((merged, {\n    extend\n  }) => {\n    return (0, _mergeWith.default)(merged, extend, (mergedValue, extendValue) => {\n      if ((0, _isUndefined.default)(mergedValue)) {\n        return [extendValue];\n      }\n\n      if (Array.isArray(mergedValue)) {\n        return [extendValue, ...mergedValue];\n      }\n\n      return [extendValue, mergedValue];\n    });\n  }, {});\n}\n\nfunction mergeThemes(themes) {\n  return { ...themes.reduce((merged, theme) => (0, _defaults.default)(merged, theme), {}),\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: collectExtends(themes)\n  };\n}\n\nfunction mergeExtensionCustomizer(merged, value) {\n  // When we have an array of objects, we do want to merge it\n  if (Array.isArray(merged) && (0, _isPlainObject.default)((0, _head.default)(merged))) {\n    return merged.concat(value);\n  } // When the incoming value is an array, and the existing config is an object, prepend the existing object\n\n\n  if (Array.isArray(value) && (0, _isPlainObject.default)((0, _head.default)(value)) && (0, _isPlainObject.default)(merged)) {\n    return [merged, ...value];\n  } // Override arrays (for example for font-families, box-shadows, ...)\n\n\n  if (Array.isArray(value)) {\n    return value;\n  } // Execute default behaviour\n\n\n  return undefined;\n}\n\nfunction mergeExtensions({\n  extend,\n  ...theme\n}) {\n  return (0, _mergeWith.default)(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!(0, _isFunction.default)(themeValue) && !(0, _some.default)(extensions, _isFunction.default)) {\n      return (0, _mergeWith.default)({}, themeValue, ...extensions, mergeExtensionCustomizer);\n    }\n\n    return (resolveThemePath, utils) => (0, _mergeWith.default)({}, ...[themeValue, ...extensions].map(e => value(e, resolveThemePath, utils)), mergeExtensionCustomizer);\n  });\n}\n\nfunction resolveFunctionKeys(object) {\n  const resolvePath = (key, defaultValue) => {\n    const path = (0, _toPath.default)(key);\n    let index = 0;\n    let val = object;\n\n    while (val !== undefined && val !== null && index < path.length) {\n      val = val[path[index++]];\n      val = (0, _isFunction.default)(val) ? val(resolvePath, configUtils) : val;\n    }\n\n    return val === undefined ? defaultValue : val;\n  };\n\n  return Object.keys(object).reduce((resolved, key) => {\n    return { ...resolved,\n      [key]: (0, _isFunction.default)(object[key]) ? object[key](resolvePath, configUtils) : object[key]\n    };\n  }, {});\n}\n\nfunction extractPluginConfigs(configs) {\n  let allConfigs = [];\n  configs.forEach(config => {\n    allConfigs = [...allConfigs, config];\n    const plugins = (0, _get.default)(config, 'plugins', []);\n\n    if (plugins.length === 0) {\n      return;\n    }\n\n    plugins.forEach(plugin => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin();\n      }\n\n      allConfigs = [...allConfigs, ...extractPluginConfigs([(0, _get.default)(plugin, 'config', {})])];\n    });\n  });\n  return allConfigs;\n}\n\nfunction mergeVariants(variants) {\n  const mergedVariants = variants.reduce((resolved, variants) => {\n    Object.entries(variants || {}).forEach(([plugin, pluginVariants]) => {\n      if ((0, _isFunction.default)(pluginVariants)) {\n        resolved[plugin] = pluginVariants({\n          variants(path) {\n            return (0, _get.default)(resolved, path, []);\n          },\n\n          before(toInsert, variant, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            if (variant === undefined) {\n              return [...toInsert, ...existingPluginVariants];\n            }\n\n            const index = existingPluginVariants.indexOf(variant);\n\n            if (index === -1) {\n              return [...existingPluginVariants, ...toInsert];\n            }\n\n            return [...existingPluginVariants.slice(0, index), ...toInsert, ...existingPluginVariants.slice(index)];\n          },\n\n          after(toInsert, variant, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            if (variant === undefined) {\n              return [...existingPluginVariants, ...toInsert];\n            }\n\n            const index = existingPluginVariants.indexOf(variant);\n\n            if (index === -1) {\n              return [...toInsert, ...existingPluginVariants];\n            }\n\n            return [...existingPluginVariants.slice(0, index + 1), ...toInsert, ...existingPluginVariants.slice(index + 1)];\n          },\n\n          without(toRemove, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            return existingPluginVariants.filter(v => !toRemove.includes(v));\n          }\n\n        });\n      } else {\n        resolved[plugin] = pluginVariants;\n      }\n    });\n    return resolved;\n  }, {});\n  return { ...mergedVariants,\n    extend: collectExtends(variants)\n  };\n}\n\nfunction mergeVariantExtensions({\n  extend,\n  ...variants\n}, variantOrder) {\n  return (0, _mergeWith.default)(variants, extend, (variantsValue, extensions) => {\n    const merged = (0, _uniq.default)([...(variantsValue || []), ...extensions].flat());\n\n    if (extensions.flat().length === 0) {\n      return merged;\n    }\n\n    return merged.sort((a, z) => variantOrder.indexOf(a) - variantOrder.indexOf(z));\n  });\n}\n\nfunction resolveVariants([firstConfig, ...variantConfigs], variantOrder) {\n  // Global variants configuration like `variants: ['hover', 'focus']`\n  if (Array.isArray(firstConfig)) {\n    return firstConfig;\n  }\n\n  return mergeVariantExtensions(mergeVariants([firstConfig, ...variantConfigs].reverse()), variantOrder);\n}\n\nfunction resolveCorePlugins(corePluginConfigs) {\n  const result = [...corePluginConfigs].reduceRight((resolved, corePluginConfig) => {\n    if ((0, _isFunction.default)(corePluginConfig)) {\n      return corePluginConfig({\n        corePlugins: resolved\n      });\n    }\n\n    return (0, _configurePlugins.default)(corePluginConfig, resolved);\n  }, _corePluginList.default);\n  return result;\n}\n\nfunction resolvePluginLists(pluginLists) {\n  const result = [...pluginLists].reduceRight((resolved, pluginList) => {\n    return [...resolved, ...pluginList];\n  }, []);\n  return result;\n}\n\nfunction resolveConfig(configs) {\n  const allConfigs = [...extractPluginConfigs(configs), {\n    darkMode: false,\n    prefix: '',\n    important: false,\n    separator: ':',\n    variantOrder: _defaultConfig.default.variantOrder\n  }];\n  const {\n    variantOrder\n  } = allConfigs.find(c => c.variantOrder);\n  return (0, _defaults.default)({\n    theme: resolveFunctionKeys(mergeExtensions(mergeThemes((0, _map.default)(allConfigs, t => (0, _get.default)(t, 'theme', {}))))),\n    variants: resolveVariants(allConfigs.map(c => (0, _get.default)(c, 'variants', {})), variantOrder),\n    corePlugins: resolveCorePlugins(allConfigs.map(c => c.corePlugins)),\n    plugins: resolvePluginLists(configs.map(c => (0, _get.default)(c, 'plugins', [])))\n  }, ...allConfigs);\n}","map":{"version":3,"sources":["/home/alan/delivery_2/previously_on/client/node_modules/tailwindcss/lib/util/resolveConfig.js"],"names":["Object","defineProperty","exports","value","default","resolveConfig","_some","_interopRequireDefault","require","_mergeWith","_isFunction","_isUndefined","_defaults","_map","_get","_uniq","_toPath","_head","_isPlainObject","_negateValue","_corePluginList","_configurePlugins","_defaultConfig","_colors","obj","__esModule","configUtils","colors","negative","scale","keys","filter","key","reduce","negativeScale","breakpoints","screens","valueToResolve","args","collectExtends","items","merged","extend","mergedValue","extendValue","Array","isArray","mergeThemes","themes","theme","mergeExtensionCustomizer","concat","undefined","mergeExtensions","themeValue","extensions","resolveThemePath","utils","map","e","resolveFunctionKeys","object","resolvePath","defaultValue","path","index","val","length","resolved","extractPluginConfigs","configs","allConfigs","forEach","config","plugins","plugin","__isOptionsFunction","mergeVariants","variants","mergedVariants","entries","pluginVariants","before","toInsert","variant","existingPluginVariants","indexOf","slice","after","without","toRemove","v","includes","mergeVariantExtensions","variantOrder","variantsValue","flat","sort","a","z","resolveVariants","firstConfig","variantConfigs","reverse","resolveCorePlugins","corePluginConfigs","result","reduceRight","corePluginConfig","corePlugins","resolvePluginLists","pluginLists","pluginList","darkMode","prefix","important","separator","find","c","t"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConfig;\n\nvar _some = _interopRequireDefault(require(\"lodash/some\"));\n\nvar _mergeWith = _interopRequireDefault(require(\"lodash/mergeWith\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _isUndefined = _interopRequireDefault(require(\"lodash/isUndefined\"));\n\nvar _defaults = _interopRequireDefault(require(\"lodash/defaults\"));\n\nvar _map = _interopRequireDefault(require(\"lodash/map\"));\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _uniq = _interopRequireDefault(require(\"lodash/uniq\"));\n\nvar _toPath = _interopRequireDefault(require(\"lodash/toPath\"));\n\nvar _head = _interopRequireDefault(require(\"lodash/head\"));\n\nvar _isPlainObject = _interopRequireDefault(require(\"lodash/isPlainObject\"));\n\nvar _negateValue = _interopRequireDefault(require(\"./negateValue\"));\n\nvar _corePluginList = _interopRequireDefault(require(\"../corePluginList\"));\n\nvar _configurePlugins = _interopRequireDefault(require(\"./configurePlugins\"));\n\nvar _defaultConfig = _interopRequireDefault(require(\"../../stubs/defaultConfig.stub\"));\n\nvar _colors = _interopRequireDefault(require(\"../../colors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst configUtils = {\n  colors: _colors.default,\n\n  negative(scale) {\n    return Object.keys(scale).filter(key => scale[key] !== '0').reduce((negativeScale, key) => ({ ...negativeScale,\n      [`-${key}`]: (0, _negateValue.default)(scale[key])\n    }), {});\n  },\n\n  breakpoints(screens) {\n    return Object.keys(screens).filter(key => typeof screens[key] === 'string').reduce((breakpoints, key) => ({ ...breakpoints,\n      [`screen-${key}`]: screens[key]\n    }), {});\n  }\n\n};\n\nfunction value(valueToResolve, ...args) {\n  return (0, _isFunction.default)(valueToResolve) ? valueToResolve(...args) : valueToResolve;\n}\n\nfunction collectExtends(items) {\n  return items.reduce((merged, {\n    extend\n  }) => {\n    return (0, _mergeWith.default)(merged, extend, (mergedValue, extendValue) => {\n      if ((0, _isUndefined.default)(mergedValue)) {\n        return [extendValue];\n      }\n\n      if (Array.isArray(mergedValue)) {\n        return [extendValue, ...mergedValue];\n      }\n\n      return [extendValue, mergedValue];\n    });\n  }, {});\n}\n\nfunction mergeThemes(themes) {\n  return { ...themes.reduce((merged, theme) => (0, _defaults.default)(merged, theme), {}),\n    // In order to resolve n config objects, we combine all of their `extend` properties\n    // into arrays instead of objects so they aren't overridden.\n    extend: collectExtends(themes)\n  };\n}\n\nfunction mergeExtensionCustomizer(merged, value) {\n  // When we have an array of objects, we do want to merge it\n  if (Array.isArray(merged) && (0, _isPlainObject.default)((0, _head.default)(merged))) {\n    return merged.concat(value);\n  } // When the incoming value is an array, and the existing config is an object, prepend the existing object\n\n\n  if (Array.isArray(value) && (0, _isPlainObject.default)((0, _head.default)(value)) && (0, _isPlainObject.default)(merged)) {\n    return [merged, ...value];\n  } // Override arrays (for example for font-families, box-shadows, ...)\n\n\n  if (Array.isArray(value)) {\n    return value;\n  } // Execute default behaviour\n\n\n  return undefined;\n}\n\nfunction mergeExtensions({\n  extend,\n  ...theme\n}) {\n  return (0, _mergeWith.default)(theme, extend, (themeValue, extensions) => {\n    // The `extend` property is an array, so we need to check if it contains any functions\n    if (!(0, _isFunction.default)(themeValue) && !(0, _some.default)(extensions, _isFunction.default)) {\n      return (0, _mergeWith.default)({}, themeValue, ...extensions, mergeExtensionCustomizer);\n    }\n\n    return (resolveThemePath, utils) => (0, _mergeWith.default)({}, ...[themeValue, ...extensions].map(e => value(e, resolveThemePath, utils)), mergeExtensionCustomizer);\n  });\n}\n\nfunction resolveFunctionKeys(object) {\n  const resolvePath = (key, defaultValue) => {\n    const path = (0, _toPath.default)(key);\n    let index = 0;\n    let val = object;\n\n    while (val !== undefined && val !== null && index < path.length) {\n      val = val[path[index++]];\n      val = (0, _isFunction.default)(val) ? val(resolvePath, configUtils) : val;\n    }\n\n    return val === undefined ? defaultValue : val;\n  };\n\n  return Object.keys(object).reduce((resolved, key) => {\n    return { ...resolved,\n      [key]: (0, _isFunction.default)(object[key]) ? object[key](resolvePath, configUtils) : object[key]\n    };\n  }, {});\n}\n\nfunction extractPluginConfigs(configs) {\n  let allConfigs = [];\n  configs.forEach(config => {\n    allConfigs = [...allConfigs, config];\n    const plugins = (0, _get.default)(config, 'plugins', []);\n\n    if (plugins.length === 0) {\n      return;\n    }\n\n    plugins.forEach(plugin => {\n      if (plugin.__isOptionsFunction) {\n        plugin = plugin();\n      }\n\n      allConfigs = [...allConfigs, ...extractPluginConfigs([(0, _get.default)(plugin, 'config', {})])];\n    });\n  });\n  return allConfigs;\n}\n\nfunction mergeVariants(variants) {\n  const mergedVariants = variants.reduce((resolved, variants) => {\n    Object.entries(variants || {}).forEach(([plugin, pluginVariants]) => {\n      if ((0, _isFunction.default)(pluginVariants)) {\n        resolved[plugin] = pluginVariants({\n          variants(path) {\n            return (0, _get.default)(resolved, path, []);\n          },\n\n          before(toInsert, variant, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            if (variant === undefined) {\n              return [...toInsert, ...existingPluginVariants];\n            }\n\n            const index = existingPluginVariants.indexOf(variant);\n\n            if (index === -1) {\n              return [...existingPluginVariants, ...toInsert];\n            }\n\n            return [...existingPluginVariants.slice(0, index), ...toInsert, ...existingPluginVariants.slice(index)];\n          },\n\n          after(toInsert, variant, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            if (variant === undefined) {\n              return [...existingPluginVariants, ...toInsert];\n            }\n\n            const index = existingPluginVariants.indexOf(variant);\n\n            if (index === -1) {\n              return [...toInsert, ...existingPluginVariants];\n            }\n\n            return [...existingPluginVariants.slice(0, index + 1), ...toInsert, ...existingPluginVariants.slice(index + 1)];\n          },\n\n          without(toRemove, existingPluginVariants = (0, _get.default)(resolved, plugin, [])) {\n            return existingPluginVariants.filter(v => !toRemove.includes(v));\n          }\n\n        });\n      } else {\n        resolved[plugin] = pluginVariants;\n      }\n    });\n    return resolved;\n  }, {});\n  return { ...mergedVariants,\n    extend: collectExtends(variants)\n  };\n}\n\nfunction mergeVariantExtensions({\n  extend,\n  ...variants\n}, variantOrder) {\n  return (0, _mergeWith.default)(variants, extend, (variantsValue, extensions) => {\n    const merged = (0, _uniq.default)([...(variantsValue || []), ...extensions].flat());\n\n    if (extensions.flat().length === 0) {\n      return merged;\n    }\n\n    return merged.sort((a, z) => variantOrder.indexOf(a) - variantOrder.indexOf(z));\n  });\n}\n\nfunction resolveVariants([firstConfig, ...variantConfigs], variantOrder) {\n  // Global variants configuration like `variants: ['hover', 'focus']`\n  if (Array.isArray(firstConfig)) {\n    return firstConfig;\n  }\n\n  return mergeVariantExtensions(mergeVariants([firstConfig, ...variantConfigs].reverse()), variantOrder);\n}\n\nfunction resolveCorePlugins(corePluginConfigs) {\n  const result = [...corePluginConfigs].reduceRight((resolved, corePluginConfig) => {\n    if ((0, _isFunction.default)(corePluginConfig)) {\n      return corePluginConfig({\n        corePlugins: resolved\n      });\n    }\n\n    return (0, _configurePlugins.default)(corePluginConfig, resolved);\n  }, _corePluginList.default);\n  return result;\n}\n\nfunction resolvePluginLists(pluginLists) {\n  const result = [...pluginLists].reduceRight((resolved, pluginList) => {\n    return [...resolved, ...pluginList];\n  }, []);\n  return result;\n}\n\nfunction resolveConfig(configs) {\n  const allConfigs = [...extractPluginConfigs(configs), {\n    darkMode: false,\n    prefix: '',\n    important: false,\n    separator: ':',\n    variantOrder: _defaultConfig.default.variantOrder\n  }];\n  const {\n    variantOrder\n  } = allConfigs.find(c => c.variantOrder);\n  return (0, _defaults.default)({\n    theme: resolveFunctionKeys(mergeExtensions(mergeThemes((0, _map.default)(allConfigs, t => (0, _get.default)(t, 'theme', {}))))),\n    variants: resolveVariants(allConfigs.map(c => (0, _get.default)(c, 'variants', {})), variantOrder),\n    corePlugins: resolveCorePlugins(allConfigs.map(c => c.corePlugins)),\n    plugins: resolvePluginLists(configs.map(c => (0, _get.default)(c, 'plugins', [])))\n  }, ...allConfigs);\n}"]},"metadata":{},"sourceType":"script"}