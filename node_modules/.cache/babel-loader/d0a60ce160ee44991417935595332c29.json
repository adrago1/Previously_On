{"ast":null,"code":"var _jsxFileName = \"/home/alan/delivery_2/previously_on/client/src/components/episodeDetail/episodeDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EpisodeDetail() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const {\n    state\n  } = useLocation();\n  const [episodeDetail, setEpisodeDetail] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    axios.get(\"https://api.betaseries.com/episodes/display\", {\n      params: {\n        client_id: \"22f661bdce5c\",\n        id: state\n      }\n    }).then(res => {\n      if (mounted) {\n        setEpisodeDetail(res.data.episode);\n        console.log(res.data.episode);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.log(error.response);\n    });\n    return function cleanup() {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto mt-28 text-white\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center mx-auto text-2xl font-cabin mt-28 uppercase font-bold\",\n        children: \"Chargement des informations...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-5 gap-20 text-xl\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-1\",\n          children: episodeDetail.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(EpisodeDetail, \"HkAOd4d19Lhs3aiRtZw96ur61EI=\", false, function () {\n  return [useLocation];\n});\n\n_c = EpisodeDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"EpisodeDetail\");","map":{"version":3,"sources":["/home/alan/delivery_2/previously_on/client/src/components/episodeDetail/episodeDetail.js"],"names":["React","useEffect","useState","axios","useLocation","EpisodeDetail","loading","setLoading","state","episodeDetail","setEpisodeDetail","mounted","get","params","client_id","id","then","res","data","episode","console","log","catch","error","response","cleanup","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,cAA5B;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAYJ,WAAW,EAA7B;AAEA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,OAAO,GAAG,IAAd;AACAR,IAAAA,KAAK,CAACS,GAAN,CAAU,6CAAV,EAAyD;AACrDC,MAAAA,MAAM,EAAE;AACJC,QAAAA,SAAS,EAAE,cADP;AAEJC,QAAAA,EAAE,EAAEP;AAFA;AAD6C,KAAzD,EAKGQ,IALH,CAKQC,GAAG,IAAI;AACX,UAAIN,OAAJ,EAAa;AACTD,QAAAA,gBAAgB,CAACO,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAhB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAJ,CAASC,OAArB;AACAZ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAXD,EAWGe,KAXH,CAWSC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,QAAlB;AACH,KAbD;AAeA,WAAO,SAASC,OAAT,GAAmB;AACtBd,MAAAA,OAAO,GAAG,KAAV;AACH,KAFD;AAGH,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,gBACKL,OAAO,gBAAG;AAAG,QAAA,SAAS,EAAC,mEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBACR;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBACKG,aAAa,CAACiB;AADnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAaH;;GA1CuBrB,a;UAGFD,W;;;KAHEC,a","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router\";\n\nexport default function EpisodeDetail() {\n\n    const [loading, setLoading] = useState(true);\n    const { state } = useLocation();\n\n    const [episodeDetail, setEpisodeDetail] = useState([]);\n\n    useEffect(() => {\n        let mounted = true;\n        axios.get(\"https://api.betaseries.com/episodes/display\", {\n            params: {\n                client_id: \"22f661bdce5c\",\n                id: state,\n            }\n        }).then(res => {\n            if (mounted) {\n                setEpisodeDetail(res.data.episode);\n                console.log(res.data.episode);\n                setLoading(false);\n            }\n        }).catch(error => {\n            console.log(error.response);\n        })\n\n        return function cleanup() {\n            mounted = false;\n        }\n    }, []);\n\n    return (\n        <>\n        <div className=\"container mx-auto mt-28 text-white\">\n            {loading ? <p className=\"text-center mx-auto text-2xl font-cabin mt-28 uppercase font-bold\">Chargement des informations...</p> :\n            <div className=\"grid grid-cols-5 gap-20 text-xl\">\n                <div className=\"col-span-1\">\n                    {episodeDetail.title}\n                </div>\n            </div>\n            }\n        </div>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}