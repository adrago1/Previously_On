{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseDependency;\n\nvar _isGlob = _interopRequireDefault(require(\"is-glob\"));\n\nvar _globParent = _interopRequireDefault(require(\"glob-parent\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Based on `glob-base`\n// https://github.com/micromatch/glob-base/blob/master/index.js\n\n\nfunction parseGlob(pattern) {\n  let glob = pattern;\n  let base = (0, _globParent.default)(pattern);\n\n  if (base !== '.') {\n    glob = pattern.substr(base.length);\n\n    if (glob.charAt(0) === '/') {\n      glob = glob.substr(1);\n    }\n  }\n\n  if (glob.substr(0, 2) === './') {\n    glob = glob.substr(2);\n  }\n\n  if (glob.charAt(0) === '/') {\n    glob = glob.substr(1);\n  }\n\n  return {\n    base,\n    glob\n  };\n}\n\nfunction parseDependency(normalizedFileOrGlob) {\n  let message;\n\n  if ((0, _isGlob.default)(normalizedFileOrGlob)) {\n    let {\n      base,\n      glob\n    } = parseGlob(normalizedFileOrGlob);\n    message = {\n      type: 'dir-dependency',\n      dir: _path.default.resolve(base),\n      glob\n    };\n  } else {\n    message = {\n      type: 'dependency',\n      file: _path.default.resolve(normalizedFileOrGlob)\n    };\n  } // rollup-plugin-postcss does not support dir-dependency messages\n  // but directories can be watched in the same way as files\n\n\n  if (message.type === 'dir-dependency' && process.env.ROLLUP_WATCH === 'true') {\n    message = {\n      type: 'dependency',\n      file: message.dir\n    };\n  }\n\n  return message;\n}","map":{"version":3,"sources":["/home/alan/delivery_2/previously_on/client/node_modules/tailwindcss/lib/util/parseDependency.js"],"names":["Object","defineProperty","exports","value","default","parseDependency","_isGlob","_interopRequireDefault","require","_globParent","_path","obj","__esModule","parseGlob","pattern","glob","base","substr","length","charAt","normalizedFileOrGlob","message","type","dir","resolve","file","process","env","ROLLUP_WATCH"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,eAAlB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAApC;;AAEA,IAAIC,WAAW,GAAGF,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAxC;;AAEA,IAAIE,KAAK,GAAGH,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAlC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD,C,CAE/F;AACA;;;AACA,SAASE,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,MAAIC,IAAI,GAAGD,OAAX;AACA,MAAIE,IAAI,GAAG,CAAC,GAAGP,WAAW,CAACL,OAAhB,EAAyBU,OAAzB,CAAX;;AAEA,MAAIE,IAAI,KAAK,GAAb,EAAkB;AAChBD,IAAAA,IAAI,GAAGD,OAAO,CAACG,MAAR,CAAeD,IAAI,CAACE,MAApB,CAAP;;AAEA,QAAIH,IAAI,CAACI,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;AAC1BJ,MAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAP;AACD;AACF;;AAED,MAAIF,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAe,CAAf,MAAsB,IAA1B,EAAgC;AAC9BF,IAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAP;AACD;;AAED,MAAIF,IAAI,CAACI,MAAL,CAAY,CAAZ,MAAmB,GAAvB,EAA4B;AAC1BJ,IAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAP;AACD;;AAED,SAAO;AACLD,IAAAA,IADK;AAELD,IAAAA;AAFK,GAAP;AAID;;AAED,SAASV,eAAT,CAAyBe,oBAAzB,EAA+C;AAC7C,MAAIC,OAAJ;;AAEA,MAAI,CAAC,GAAGf,OAAO,CAACF,OAAZ,EAAqBgB,oBAArB,CAAJ,EAAgD;AAC9C,QAAI;AACFJ,MAAAA,IADE;AAEFD,MAAAA;AAFE,QAGAF,SAAS,CAACO,oBAAD,CAHb;AAIAC,IAAAA,OAAO,GAAG;AACRC,MAAAA,IAAI,EAAE,gBADE;AAERC,MAAAA,GAAG,EAAEb,KAAK,CAACN,OAAN,CAAcoB,OAAd,CAAsBR,IAAtB,CAFG;AAGRD,MAAAA;AAHQ,KAAV;AAKD,GAVD,MAUO;AACLM,IAAAA,OAAO,GAAG;AACRC,MAAAA,IAAI,EAAE,YADE;AAERG,MAAAA,IAAI,EAAEf,KAAK,CAACN,OAAN,CAAcoB,OAAd,CAAsBJ,oBAAtB;AAFE,KAAV;AAID,GAlB4C,CAkB3C;AACF;;;AAGA,MAAIC,OAAO,CAACC,IAAR,KAAiB,gBAAjB,IAAqCI,OAAO,CAACC,GAAR,CAAYC,YAAZ,KAA6B,MAAtE,EAA8E;AAC5EP,IAAAA,OAAO,GAAG;AACRC,MAAAA,IAAI,EAAE,YADE;AAERG,MAAAA,IAAI,EAAEJ,OAAO,CAACE;AAFN,KAAV;AAID;;AAED,SAAOF,OAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseDependency;\n\nvar _isGlob = _interopRequireDefault(require(\"is-glob\"));\n\nvar _globParent = _interopRequireDefault(require(\"glob-parent\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Based on `glob-base`\n// https://github.com/micromatch/glob-base/blob/master/index.js\nfunction parseGlob(pattern) {\n  let glob = pattern;\n  let base = (0, _globParent.default)(pattern);\n\n  if (base !== '.') {\n    glob = pattern.substr(base.length);\n\n    if (glob.charAt(0) === '/') {\n      glob = glob.substr(1);\n    }\n  }\n\n  if (glob.substr(0, 2) === './') {\n    glob = glob.substr(2);\n  }\n\n  if (glob.charAt(0) === '/') {\n    glob = glob.substr(1);\n  }\n\n  return {\n    base,\n    glob\n  };\n}\n\nfunction parseDependency(normalizedFileOrGlob) {\n  let message;\n\n  if ((0, _isGlob.default)(normalizedFileOrGlob)) {\n    let {\n      base,\n      glob\n    } = parseGlob(normalizedFileOrGlob);\n    message = {\n      type: 'dir-dependency',\n      dir: _path.default.resolve(base),\n      glob\n    };\n  } else {\n    message = {\n      type: 'dependency',\n      file: _path.default.resolve(normalizedFileOrGlob)\n    };\n  } // rollup-plugin-postcss does not support dir-dependency messages\n  // but directories can be watched in the same way as files\n\n\n  if (message.type === 'dir-dependency' && process.env.ROLLUP_WATCH === 'true') {\n    message = {\n      type: 'dependency',\n      file: message.dir\n    };\n  }\n\n  return message;\n}"]},"metadata":{},"sourceType":"script"}