{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _node = _interopRequireDefault(require(\"postcss/lib/node\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _escapeClassName = _interopRequireDefault(require(\"../util/escapeClassName\"));\n\nvar _generateVariantFunction = _interopRequireDefault(require(\"../util/generateVariantFunction\"));\n\nvar _parseObjectStyles = _interopRequireDefault(require(\"../util/parseObjectStyles\"));\n\nvar _prefixSelector = _interopRequireDefault(require(\"../util/prefixSelector\"));\n\nvar _wrapWithVariants = _interopRequireDefault(require(\"../util/wrapWithVariants\"));\n\nvar _cloneNodes = _interopRequireDefault(require(\"../util/cloneNodes\"));\n\nvar _transformThemeValue = _interopRequireDefault(require(\"./transformThemeValue\"));\n\nvar _nameClass = _interopRequireDefault(require(\"../util/nameClass\"));\n\nvar _isKeyframeRule = _interopRequireDefault(require(\"../util/isKeyframeRule\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction parseStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseStyles([styles]);\n  }\n\n  return _lodash.default.flatMap(styles, style => style instanceof _node.default ? style : (0, _parseObjectStyles.default)(style));\n}\n\nfunction wrapWithLayer(rules, layer) {\n  return _postcss.default.atRule({\n    name: 'layer',\n    params: layer\n  }).append((0, _cloneNodes.default)(Array.isArray(rules) ? rules : [rules]));\n}\n\nfunction _default(plugins, config) {\n  const pluginBaseStyles = [];\n  const pluginComponents = [];\n  const pluginUtilities = [];\n  const pluginVariantGenerators = {};\n\n  const applyConfiguredPrefix = selector => {\n    return (0, _prefixSelector.default)(config.prefix, selector);\n  };\n\n  function addUtilities(utilities, options) {\n    const defaultOptions = {\n      variants: [],\n      respectPrefix: true,\n      respectImportant: true\n    };\n    options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n      variants: options\n    }) : _lodash.default.defaults(options, defaultOptions);\n\n    const styles = _postcss.default.root({\n      nodes: parseStyles(utilities)\n    });\n\n    styles.walkRules(rule => {\n      if (options.respectPrefix && !(0, _isKeyframeRule.default)(rule)) {\n        rule.selector = applyConfiguredPrefix(rule.selector);\n      }\n\n      if (options.respectImportant && config.important) {\n        rule.__tailwind = { ...rule.__tailwind,\n          important: config.important\n        };\n      }\n    });\n    pluginUtilities.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'utilities'));\n  }\n\n  const getConfigValue = (path, defaultValue) => path ? _lodash.default.get(config, path, defaultValue) : config;\n\n  plugins.forEach(plugin => {\n    if (plugin.__isOptionsFunction) {\n      plugin = plugin();\n    }\n\n    const handler = (0, _isFunction.default)(plugin) ? plugin : _lodash.default.get(plugin, 'handler', () => {});\n    handler({\n      postcss: _postcss.default,\n      config: getConfigValue,\n      theme: (path, defaultValue) => {\n        const [pathRoot, ...subPaths] = _lodash.default.toPath(path);\n\n        const value = getConfigValue(['theme', pathRoot, ...subPaths], defaultValue);\n        return (0, _transformThemeValue.default)(pathRoot)(value);\n      },\n      corePlugins: path => {\n        if (Array.isArray(config.corePlugins)) {\n          return config.corePlugins.includes(path);\n        }\n\n        return getConfigValue(`corePlugins.${path}`, true);\n      },\n      variants: (path, defaultValue) => {\n        if (Array.isArray(config.variants)) {\n          return config.variants;\n        }\n\n        return getConfigValue(`variants.${path}`, defaultValue);\n      },\n      e: _escapeClassName.default,\n      prefix: applyConfiguredPrefix,\n      addUtilities,\n      matchUtilities: (matches, {\n        values,\n        variants,\n        respectPrefix,\n        respectImportant\n      }) => {\n        let modifierValues = Object.entries(values || {});\n        let result = Object.entries(matches).flatMap(([name, utilityFunction]) => {\n          return modifierValues.map(([modifier, value]) => {\n            let declarations = utilityFunction(value, {\n              includeRules(rules, options) {\n                addUtilities(rules, options);\n              }\n\n            });\n\n            if (!declarations) {\n              return null;\n            }\n\n            return {\n              [(0, _nameClass.default)(name, modifier)]: declarations\n            };\n          }).filter(Boolean);\n        });\n        addUtilities(result, {\n          variants,\n          respectPrefix,\n          respectImportant\n        });\n      },\n      addComponents: (components, options) => {\n        const defaultOptions = {\n          variants: [],\n          respectPrefix: true\n        };\n        options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n          variants: options\n        }) : _lodash.default.defaults(options, defaultOptions);\n\n        const styles = _postcss.default.root({\n          nodes: parseStyles(components)\n        });\n\n        styles.walkRules(rule => {\n          if (options.respectPrefix && !(0, _isKeyframeRule.default)(rule)) {\n            rule.selector = applyConfiguredPrefix(rule.selector);\n          }\n        });\n        pluginComponents.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'components'));\n      },\n      addBase: baseStyles => {\n        pluginBaseStyles.push(wrapWithLayer(parseStyles(baseStyles), 'base'));\n      },\n      addVariant: (name, generator, options = {}) => {\n        pluginVariantGenerators[name] = (0, _generateVariantFunction.default)(generator, options);\n      }\n    });\n  });\n  return {\n    base: pluginBaseStyles,\n    components: pluginComponents,\n    utilities: pluginUtilities,\n    variantGenerators: pluginVariantGenerators\n  };\n}","map":{"version":3,"sources":["/home/alan/delivery_2/previously_on/client/node_modules/tailwindcss/lib/util/processPlugins.js"],"names":["Object","defineProperty","exports","value","default","_default","_lodash","_interopRequireDefault","require","_postcss","_node","_isFunction","_escapeClassName","_generateVariantFunction","_parseObjectStyles","_prefixSelector","_wrapWithVariants","_cloneNodes","_transformThemeValue","_nameClass","_isKeyframeRule","obj","__esModule","parseStyles","styles","Array","isArray","flatMap","style","wrapWithLayer","rules","layer","atRule","name","params","append","plugins","config","pluginBaseStyles","pluginComponents","pluginUtilities","pluginVariantGenerators","applyConfiguredPrefix","selector","prefix","addUtilities","utilities","options","defaultOptions","variants","respectPrefix","respectImportant","assign","defaults","root","nodes","walkRules","rule","important","__tailwind","push","getConfigValue","path","defaultValue","get","forEach","plugin","__isOptionsFunction","handler","postcss","theme","pathRoot","subPaths","toPath","corePlugins","includes","e","matchUtilities","matches","values","modifierValues","entries","result","utilityFunction","map","modifier","declarations","includeRules","filter","Boolean","addComponents","components","addBase","baseStyles","addVariant","generator","base","variantGenerators"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAApC;;AAEA,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,IAAIE,KAAK,GAAGH,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAlC;;AAEA,IAAIG,WAAW,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAxC;;AAEA,IAAII,gBAAgB,GAAGL,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAA7C;;AAEA,IAAIK,wBAAwB,GAAGN,sBAAsB,CAACC,OAAO,CAAC,iCAAD,CAAR,CAArD;;AAEA,IAAIM,kBAAkB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAA/C;;AAEA,IAAIO,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA5C;;AAEA,IAAIQ,iBAAiB,GAAGT,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAA9C;;AAEA,IAAIS,WAAW,GAAGV,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAxC;;AAEA,IAAIU,oBAAoB,GAAGX,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAjD;;AAEA,IAAIW,UAAU,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAvC;;AAEA,IAAIY,eAAe,GAAGb,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA5C;;AAEA,SAASD,sBAAT,CAAgCc,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEjB,IAAAA,OAAO,EAAEiB;AAAX,GAArC;AAAwD;;AAE/F,SAASE,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAL,EAA4B;AAC1B,WAAOD,WAAW,CAAC,CAACC,MAAD,CAAD,CAAlB;AACD;;AAED,SAAOlB,OAAO,CAACF,OAAR,CAAgBuB,OAAhB,CAAwBH,MAAxB,EAAgCI,KAAK,IAAIA,KAAK,YAAYlB,KAAK,CAACN,OAAvB,GAAiCwB,KAAjC,GAAyC,CAAC,GAAGd,kBAAkB,CAACV,OAAvB,EAAgCwB,KAAhC,CAAlF,CAAP;AACD;;AAED,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACnC,SAAOtB,QAAQ,CAACL,OAAT,CAAiB4B,MAAjB,CAAwB;AAC7BC,IAAAA,IAAI,EAAE,OADuB;AAE7BC,IAAAA,MAAM,EAAEH;AAFqB,GAAxB,EAGJI,MAHI,CAGG,CAAC,GAAGlB,WAAW,CAACb,OAAhB,EAAyBqB,KAAK,CAACC,OAAN,CAAcI,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAxD,CAHH,CAAP;AAID;;AAED,SAASzB,QAAT,CAAkB+B,OAAlB,EAA2BC,MAA3B,EAAmC;AACjC,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,eAAe,GAAG,EAAxB;AACA,QAAMC,uBAAuB,GAAG,EAAhC;;AAEA,QAAMC,qBAAqB,GAAGC,QAAQ,IAAI;AACxC,WAAO,CAAC,GAAG5B,eAAe,CAACX,OAApB,EAA6BiC,MAAM,CAACO,MAApC,EAA4CD,QAA5C,CAAP;AACD,GAFD;;AAIA,WAASE,YAAT,CAAsBC,SAAtB,EAAiCC,OAAjC,EAA0C;AACxC,UAAMC,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE,EADW;AAErBC,MAAAA,aAAa,EAAE,IAFM;AAGrBC,MAAAA,gBAAgB,EAAE;AAHG,KAAvB;AAKAJ,IAAAA,OAAO,GAAGtB,KAAK,CAACC,OAAN,CAAcqB,OAAd,IAAyB/C,MAAM,CAACoD,MAAP,CAAc,EAAd,EAAkBJ,cAAlB,EAAkC;AACnEC,MAAAA,QAAQ,EAAEF;AADyD,KAAlC,CAAzB,GAELzC,OAAO,CAACF,OAAR,CAAgBiD,QAAhB,CAAyBN,OAAzB,EAAkCC,cAAlC,CAFL;;AAIA,UAAMxB,MAAM,GAAGf,QAAQ,CAACL,OAAT,CAAiBkD,IAAjB,CAAsB;AACnCC,MAAAA,KAAK,EAAEhC,WAAW,CAACuB,SAAD;AADiB,KAAtB,CAAf;;AAIAtB,IAAAA,MAAM,CAACgC,SAAP,CAAiBC,IAAI,IAAI;AACvB,UAAIV,OAAO,CAACG,aAAR,IAAyB,CAAC,CAAC,GAAG9B,eAAe,CAAChB,OAApB,EAA6BqD,IAA7B,CAA9B,EAAkE;AAChEA,QAAAA,IAAI,CAACd,QAAL,GAAgBD,qBAAqB,CAACe,IAAI,CAACd,QAAN,CAArC;AACD;;AAED,UAAII,OAAO,CAACI,gBAAR,IAA4Bd,MAAM,CAACqB,SAAvC,EAAkD;AAChDD,QAAAA,IAAI,CAACE,UAAL,GAAkB,EAAE,GAAGF,IAAI,CAACE,UAAV;AAChBD,UAAAA,SAAS,EAAErB,MAAM,CAACqB;AADF,SAAlB;AAGD;AACF,KAVD;AAWAlB,IAAAA,eAAe,CAACoB,IAAhB,CAAqB/B,aAAa,CAAC,CAAC,GAAGb,iBAAiB,CAACZ,OAAtB,EAA+BoB,MAAM,CAAC+B,KAAtC,EAA6CR,OAAO,CAACE,QAArD,CAAD,EAAiE,WAAjE,CAAlC;AACD;;AAED,QAAMY,cAAc,GAAG,CAACC,IAAD,EAAOC,YAAP,KAAwBD,IAAI,GAAGxD,OAAO,CAACF,OAAR,CAAgB4D,GAAhB,CAAoB3B,MAApB,EAA4ByB,IAA5B,EAAkCC,YAAlC,CAAH,GAAqD1B,MAAxG;;AAEAD,EAAAA,OAAO,CAAC6B,OAAR,CAAgBC,MAAM,IAAI;AACxB,QAAIA,MAAM,CAACC,mBAAX,EAAgC;AAC9BD,MAAAA,MAAM,GAAGA,MAAM,EAAf;AACD;;AAED,UAAME,OAAO,GAAG,CAAC,GAAGzD,WAAW,CAACP,OAAhB,EAAyB8D,MAAzB,IAAmCA,MAAnC,GAA4C5D,OAAO,CAACF,OAAR,CAAgB4D,GAAhB,CAAoBE,MAApB,EAA4B,SAA5B,EAAuC,MAAM,CAAE,CAA/C,CAA5D;AACAE,IAAAA,OAAO,CAAC;AACNC,MAAAA,OAAO,EAAE5D,QAAQ,CAACL,OADZ;AAENiC,MAAAA,MAAM,EAAEwB,cAFF;AAGNS,MAAAA,KAAK,EAAE,CAACR,IAAD,EAAOC,YAAP,KAAwB;AAC7B,cAAM,CAACQ,QAAD,EAAW,GAAGC,QAAd,IAA0BlE,OAAO,CAACF,OAAR,CAAgBqE,MAAhB,CAAuBX,IAAvB,CAAhC;;AAEA,cAAM3D,KAAK,GAAG0D,cAAc,CAAC,CAAC,OAAD,EAAUU,QAAV,EAAoB,GAAGC,QAAvB,CAAD,EAAmCT,YAAnC,CAA5B;AACA,eAAO,CAAC,GAAG7C,oBAAoB,CAACd,OAAzB,EAAkCmE,QAAlC,EAA4CpE,KAA5C,CAAP;AACD,OARK;AASNuE,MAAAA,WAAW,EAAEZ,IAAI,IAAI;AACnB,YAAIrC,KAAK,CAACC,OAAN,CAAcW,MAAM,CAACqC,WAArB,CAAJ,EAAuC;AACrC,iBAAOrC,MAAM,CAACqC,WAAP,CAAmBC,QAAnB,CAA4Bb,IAA5B,CAAP;AACD;;AAED,eAAOD,cAAc,CAAE,eAAcC,IAAK,EAArB,EAAwB,IAAxB,CAArB;AACD,OAfK;AAgBNb,MAAAA,QAAQ,EAAE,CAACa,IAAD,EAAOC,YAAP,KAAwB;AAChC,YAAItC,KAAK,CAACC,OAAN,CAAcW,MAAM,CAACY,QAArB,CAAJ,EAAoC;AAClC,iBAAOZ,MAAM,CAACY,QAAd;AACD;;AAED,eAAOY,cAAc,CAAE,YAAWC,IAAK,EAAlB,EAAqBC,YAArB,CAArB;AACD,OAtBK;AAuBNa,MAAAA,CAAC,EAAEhE,gBAAgB,CAACR,OAvBd;AAwBNwC,MAAAA,MAAM,EAAEF,qBAxBF;AAyBNG,MAAAA,YAzBM;AA0BNgC,MAAAA,cAAc,EAAE,CAACC,OAAD,EAAU;AACxBC,QAAAA,MADwB;AAExB9B,QAAAA,QAFwB;AAGxBC,QAAAA,aAHwB;AAIxBC,QAAAA;AAJwB,OAAV,KAKV;AACJ,YAAI6B,cAAc,GAAGhF,MAAM,CAACiF,OAAP,CAAeF,MAAM,IAAI,EAAzB,CAArB;AACA,YAAIG,MAAM,GAAGlF,MAAM,CAACiF,OAAP,CAAeH,OAAf,EAAwBnD,OAAxB,CAAgC,CAAC,CAACM,IAAD,EAAOkD,eAAP,CAAD,KAA6B;AACxE,iBAAOH,cAAc,CAACI,GAAf,CAAmB,CAAC,CAACC,QAAD,EAAWlF,KAAX,CAAD,KAAuB;AAC/C,gBAAImF,YAAY,GAAGH,eAAe,CAAChF,KAAD,EAAQ;AACxCoF,cAAAA,YAAY,CAACzD,KAAD,EAAQiB,OAAR,EAAiB;AAC3BF,gBAAAA,YAAY,CAACf,KAAD,EAAQiB,OAAR,CAAZ;AACD;;AAHuC,aAAR,CAAlC;;AAOA,gBAAI,CAACuC,YAAL,EAAmB;AACjB,qBAAO,IAAP;AACD;;AAED,mBAAO;AACL,eAAC,CAAC,GAAGnE,UAAU,CAACf,OAAf,EAAwB6B,IAAxB,EAA8BoD,QAA9B,CAAD,GAA2CC;AADtC,aAAP;AAGD,WAfM,EAeJE,MAfI,CAeGC,OAfH,CAAP;AAgBD,SAjBY,CAAb;AAkBA5C,QAAAA,YAAY,CAACqC,MAAD,EAAS;AACnBjC,UAAAA,QADmB;AAEnBC,UAAAA,aAFmB;AAGnBC,UAAAA;AAHmB,SAAT,CAAZ;AAKD,OAxDK;AAyDNuC,MAAAA,aAAa,EAAE,CAACC,UAAD,EAAa5C,OAAb,KAAyB;AACtC,cAAMC,cAAc,GAAG;AACrBC,UAAAA,QAAQ,EAAE,EADW;AAErBC,UAAAA,aAAa,EAAE;AAFM,SAAvB;AAIAH,QAAAA,OAAO,GAAGtB,KAAK,CAACC,OAAN,CAAcqB,OAAd,IAAyB/C,MAAM,CAACoD,MAAP,CAAc,EAAd,EAAkBJ,cAAlB,EAAkC;AACnEC,UAAAA,QAAQ,EAAEF;AADyD,SAAlC,CAAzB,GAELzC,OAAO,CAACF,OAAR,CAAgBiD,QAAhB,CAAyBN,OAAzB,EAAkCC,cAAlC,CAFL;;AAIA,cAAMxB,MAAM,GAAGf,QAAQ,CAACL,OAAT,CAAiBkD,IAAjB,CAAsB;AACnCC,UAAAA,KAAK,EAAEhC,WAAW,CAACoE,UAAD;AADiB,SAAtB,CAAf;;AAIAnE,QAAAA,MAAM,CAACgC,SAAP,CAAiBC,IAAI,IAAI;AACvB,cAAIV,OAAO,CAACG,aAAR,IAAyB,CAAC,CAAC,GAAG9B,eAAe,CAAChB,OAApB,EAA6BqD,IAA7B,CAA9B,EAAkE;AAChEA,YAAAA,IAAI,CAACd,QAAL,GAAgBD,qBAAqB,CAACe,IAAI,CAACd,QAAN,CAArC;AACD;AACF,SAJD;AAKAJ,QAAAA,gBAAgB,CAACqB,IAAjB,CAAsB/B,aAAa,CAAC,CAAC,GAAGb,iBAAiB,CAACZ,OAAtB,EAA+BoB,MAAM,CAAC+B,KAAtC,EAA6CR,OAAO,CAACE,QAArD,CAAD,EAAiE,YAAjE,CAAnC;AACD,OA5EK;AA6EN2C,MAAAA,OAAO,EAAEC,UAAU,IAAI;AACrBvD,QAAAA,gBAAgB,CAACsB,IAAjB,CAAsB/B,aAAa,CAACN,WAAW,CAACsE,UAAD,CAAZ,EAA0B,MAA1B,CAAnC;AACD,OA/EK;AAgFNC,MAAAA,UAAU,EAAE,CAAC7D,IAAD,EAAO8D,SAAP,EAAkBhD,OAAO,GAAG,EAA5B,KAAmC;AAC7CN,QAAAA,uBAAuB,CAACR,IAAD,CAAvB,GAAgC,CAAC,GAAGpB,wBAAwB,CAACT,OAA7B,EAAsC2F,SAAtC,EAAiDhD,OAAjD,CAAhC;AACD;AAlFK,KAAD,CAAP;AAoFD,GA1FD;AA2FA,SAAO;AACLiD,IAAAA,IAAI,EAAE1D,gBADD;AAELqD,IAAAA,UAAU,EAAEpD,gBAFP;AAGLO,IAAAA,SAAS,EAAEN,eAHN;AAILyD,IAAAA,iBAAiB,EAAExD;AAJd,GAAP;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nvar _node = _interopRequireDefault(require(\"postcss/lib/node\"));\n\nvar _isFunction = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _escapeClassName = _interopRequireDefault(require(\"../util/escapeClassName\"));\n\nvar _generateVariantFunction = _interopRequireDefault(require(\"../util/generateVariantFunction\"));\n\nvar _parseObjectStyles = _interopRequireDefault(require(\"../util/parseObjectStyles\"));\n\nvar _prefixSelector = _interopRequireDefault(require(\"../util/prefixSelector\"));\n\nvar _wrapWithVariants = _interopRequireDefault(require(\"../util/wrapWithVariants\"));\n\nvar _cloneNodes = _interopRequireDefault(require(\"../util/cloneNodes\"));\n\nvar _transformThemeValue = _interopRequireDefault(require(\"./transformThemeValue\"));\n\nvar _nameClass = _interopRequireDefault(require(\"../util/nameClass\"));\n\nvar _isKeyframeRule = _interopRequireDefault(require(\"../util/isKeyframeRule\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parseStyles(styles) {\n  if (!Array.isArray(styles)) {\n    return parseStyles([styles]);\n  }\n\n  return _lodash.default.flatMap(styles, style => style instanceof _node.default ? style : (0, _parseObjectStyles.default)(style));\n}\n\nfunction wrapWithLayer(rules, layer) {\n  return _postcss.default.atRule({\n    name: 'layer',\n    params: layer\n  }).append((0, _cloneNodes.default)(Array.isArray(rules) ? rules : [rules]));\n}\n\nfunction _default(plugins, config) {\n  const pluginBaseStyles = [];\n  const pluginComponents = [];\n  const pluginUtilities = [];\n  const pluginVariantGenerators = {};\n\n  const applyConfiguredPrefix = selector => {\n    return (0, _prefixSelector.default)(config.prefix, selector);\n  };\n\n  function addUtilities(utilities, options) {\n    const defaultOptions = {\n      variants: [],\n      respectPrefix: true,\n      respectImportant: true\n    };\n    options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n      variants: options\n    }) : _lodash.default.defaults(options, defaultOptions);\n\n    const styles = _postcss.default.root({\n      nodes: parseStyles(utilities)\n    });\n\n    styles.walkRules(rule => {\n      if (options.respectPrefix && !(0, _isKeyframeRule.default)(rule)) {\n        rule.selector = applyConfiguredPrefix(rule.selector);\n      }\n\n      if (options.respectImportant && config.important) {\n        rule.__tailwind = { ...rule.__tailwind,\n          important: config.important\n        };\n      }\n    });\n    pluginUtilities.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'utilities'));\n  }\n\n  const getConfigValue = (path, defaultValue) => path ? _lodash.default.get(config, path, defaultValue) : config;\n\n  plugins.forEach(plugin => {\n    if (plugin.__isOptionsFunction) {\n      plugin = plugin();\n    }\n\n    const handler = (0, _isFunction.default)(plugin) ? plugin : _lodash.default.get(plugin, 'handler', () => {});\n    handler({\n      postcss: _postcss.default,\n      config: getConfigValue,\n      theme: (path, defaultValue) => {\n        const [pathRoot, ...subPaths] = _lodash.default.toPath(path);\n\n        const value = getConfigValue(['theme', pathRoot, ...subPaths], defaultValue);\n        return (0, _transformThemeValue.default)(pathRoot)(value);\n      },\n      corePlugins: path => {\n        if (Array.isArray(config.corePlugins)) {\n          return config.corePlugins.includes(path);\n        }\n\n        return getConfigValue(`corePlugins.${path}`, true);\n      },\n      variants: (path, defaultValue) => {\n        if (Array.isArray(config.variants)) {\n          return config.variants;\n        }\n\n        return getConfigValue(`variants.${path}`, defaultValue);\n      },\n      e: _escapeClassName.default,\n      prefix: applyConfiguredPrefix,\n      addUtilities,\n      matchUtilities: (matches, {\n        values,\n        variants,\n        respectPrefix,\n        respectImportant\n      }) => {\n        let modifierValues = Object.entries(values || {});\n        let result = Object.entries(matches).flatMap(([name, utilityFunction]) => {\n          return modifierValues.map(([modifier, value]) => {\n            let declarations = utilityFunction(value, {\n              includeRules(rules, options) {\n                addUtilities(rules, options);\n              }\n\n            });\n\n            if (!declarations) {\n              return null;\n            }\n\n            return {\n              [(0, _nameClass.default)(name, modifier)]: declarations\n            };\n          }).filter(Boolean);\n        });\n        addUtilities(result, {\n          variants,\n          respectPrefix,\n          respectImportant\n        });\n      },\n      addComponents: (components, options) => {\n        const defaultOptions = {\n          variants: [],\n          respectPrefix: true\n        };\n        options = Array.isArray(options) ? Object.assign({}, defaultOptions, {\n          variants: options\n        }) : _lodash.default.defaults(options, defaultOptions);\n\n        const styles = _postcss.default.root({\n          nodes: parseStyles(components)\n        });\n\n        styles.walkRules(rule => {\n          if (options.respectPrefix && !(0, _isKeyframeRule.default)(rule)) {\n            rule.selector = applyConfiguredPrefix(rule.selector);\n          }\n        });\n        pluginComponents.push(wrapWithLayer((0, _wrapWithVariants.default)(styles.nodes, options.variants), 'components'));\n      },\n      addBase: baseStyles => {\n        pluginBaseStyles.push(wrapWithLayer(parseStyles(baseStyles), 'base'));\n      },\n      addVariant: (name, generator, options = {}) => {\n        pluginVariantGenerators[name] = (0, _generateVariantFunction.default)(generator, options);\n      }\n    });\n  });\n  return {\n    base: pluginBaseStyles,\n    components: pluginComponents,\n    utilities: pluginUtilities,\n    variantGenerators: pluginVariantGenerators\n  };\n}"]},"metadata":{},"sourceType":"script"}