{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = void 0;\n\nconst merge2 = require(\"merge2\");\n\nfunction merge(streams) {\n  const mergedStream = merge2(streams);\n  streams.forEach(stream => {\n    stream.once('error', error => mergedStream.emit('error', error));\n  });\n  mergedStream.once('close', () => propagateCloseEventToSources(streams));\n  mergedStream.once('end', () => propagateCloseEventToSources(streams));\n  return mergedStream;\n}\n\nexports.merge = merge;\n\nfunction propagateCloseEventToSources(streams) {\n  streams.forEach(stream => stream.emit('close'));\n}","map":{"version":3,"sources":["/home/alan/delivery_2/previously_on/client/node_modules/fast-glob/out/utils/stream.js"],"names":["Object","defineProperty","exports","value","merge","merge2","require","streams","mergedStream","forEach","stream","once","error","emit","propagateCloseEventToSources"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgB,KAAK,CAArB;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,SAASF,KAAT,CAAeG,OAAf,EAAwB;AACpB,QAAMC,YAAY,GAAGH,MAAM,CAACE,OAAD,CAA3B;AACAA,EAAAA,OAAO,CAACE,OAAR,CAAiBC,MAAD,IAAY;AACxBA,IAAAA,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAsBC,KAAD,IAAWJ,YAAY,CAACK,IAAb,CAAkB,OAAlB,EAA2BD,KAA3B,CAAhC;AACH,GAFD;AAGAJ,EAAAA,YAAY,CAACG,IAAb,CAAkB,OAAlB,EAA2B,MAAMG,4BAA4B,CAACP,OAAD,CAA7D;AACAC,EAAAA,YAAY,CAACG,IAAb,CAAkB,KAAlB,EAAyB,MAAMG,4BAA4B,CAACP,OAAD,CAA3D;AACA,SAAOC,YAAP;AACH;;AACDN,OAAO,CAACE,KAAR,GAAgBA,KAAhB;;AACA,SAASU,4BAAT,CAAsCP,OAAtC,EAA+C;AAC3CA,EAAAA,OAAO,CAACE,OAAR,CAAiBC,MAAD,IAAYA,MAAM,CAACG,IAAP,CAAY,OAAZ,CAA5B;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.merge = void 0;\nconst merge2 = require(\"merge2\");\nfunction merge(streams) {\n    const mergedStream = merge2(streams);\n    streams.forEach((stream) => {\n        stream.once('error', (error) => mergedStream.emit('error', error));\n    });\n    mergedStream.once('close', () => propagateCloseEventToSources(streams));\n    mergedStream.once('end', () => propagateCloseEventToSources(streams));\n    return mergedStream;\n}\nexports.merge = merge;\nfunction propagateCloseEventToSources(streams) {\n    streams.forEach((stream) => stream.emit('close'));\n}\n"]},"metadata":{},"sourceType":"script"}